@using LivingMessiah.Features.Sukkot.Constants
@using LivingMessiah.Features.Sukkot.Enums

@if (CurrentStepRecord is not null)
{

  <div class="@MediaQuery.Xs.DivClass">
    <p class='text-center fs-5 mb-0'>Remainder: <b>@GetRemainder()</b></p>
    <p class='text-center fs-5 mb-3'>Previous donation(s): <b>@GetTotalDonations()</b></p>
  </div>

  <div class="@MediaQuery.SmOrMdOrLgOrXl.DivClass">
    <div class="d-flex justify-content-around fs-5 mb-3">
      <span class=''>Remainder: <b>@GetRemainder()</b></span>
      <span class=''>Previous donation(s): <b>@GetTotalDonations()</b></span>
    </div>
  </div>

  <p class="fs-4 text-center mb-1 mt-4">Three donation options</p>
  <ol class="list-group list-group-numbered fs-5">
    <li class="list-group-item list-group-item-secondary">
      <b>Preferred Option</b>.  Pay with <u>Debit or Credit Card</u>.  Click the
      <CommonButtons CurrentStepRecordId="CurrentStepRecord.Id" NavButton="NavButton.Donation" />
      button and follow the instructions.
      <br />See the

      <a href="@LivingMessiah.Features.Sukkot.Constants.Blobs.UrlPDF(PDFs.StripeWalkThrough)"
         target="_blank">
        <i class="fas fa-file-pdf"></i> <u>Stripe walk through</u>
      </a> if you need more details.
      Note, a <em>Stripe</em> &reg; account is <u>not</u> necessary, Living Messiah just uses them to process financial transactions.
      <br /><em>Or</em>...<br />
    </li>
    <li class="list-group-item list-group-item-secondary">
      Pay via <u>Zelle</u>.  Click
      <CommonButtons CurrentStepRecordId="CurrentStepRecord.Id" NavButton="NavButton.Print" />
      and follow the instructions.
    </li>
    <li class="list-group-item list-group-item-secondary">
      Pay via <u>Check</u>.  Click
      <CommonButtons CurrentStepRecordId="CurrentStepRecord.Id" NavButton="NavButton.Print" />
      and follow the instructions.
    </li>
  </ol>
}
else
{
  <p> CurrentStepRecord </p>
}


@code {
  [Parameter, EditorRequired] public CurrentStepRecord? CurrentStepRecord { get; set; }

  private string GetRemainder()
  {
    return CurrentStepHelper.RemainingCost(CurrentStepRecord!.RegistrationFeeAdjusted, CurrentStepRecord!.TotalDonation).ToString("C0");
  }

  private string GetTotalDonations()
  {
    return CurrentStepRecord!.TotalDonation.ToString("C0");
  }

}

