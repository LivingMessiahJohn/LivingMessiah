@using LivingMessiah.Features.Welcome

@* @inject IToastService? Toast *@

@* 
@if(StateGotten)
{

	<p>ShowingDetails: @ShowingDetails</p> *@

	<div class="card bg-warning-subtle">
		<div class="card-header">
			<div class="d-flex justify-content-between">
				<span class="text-dark">
					<i class="@Nav.Welcome.Icon fa-fw fa-3x"></i>
				</span>
				<h1 class="@Nav.Welcome.TextColor text-center pt-1"><b>Welcome</b></h1>
				<ShowHideToggle ContentIsShowing="ShowingDetails"
												OnToggleSelected="ReturnedToggle" />
			</div>

			@if (ShowingDetails)
			{
				<hr />
				<TableOfContent />
				<Introduction />
				<Vision />
				<Mission />
				<Resolve />

				<div class="card-footer float-end">
					<ShowHideToggle ContentIsShowing="ShowingDetails"
													OnToggleSelected="ReturnedToggle" />
				</div>
			}
		</div>
	</div>
@* }
else
{
	<p> STATE NOT GOTTEN</p>
} *@

@code {

	[CascadingParameter] public CascadingAppState? State { get; set; }

	//bool StateGotten = false;
	bool ShowingDetails;

	protected override void OnParametersSet()
	{
		ShowingDetails = State!.AppState!.HomeState!.GetIsShowingImage();
		//StateGotten = true;
		//Toast!.ShowWarning($"ShowingDetails: {ShowingDetails}");
	}

	private async Task ReturnedToggle()
	{
		//ShowingDetails = !ShowingDetails;
		await State!.AppState!.HomeState!.UpdateIsShowingWelcomeDetails(ShowingDetails);
	}
}
