@page "/LunarMonth"

@using LivingMessiah.Helpers
@using LunarMonthType = LivingMessiah.Features.Calendar.Enums.LunarMonth
@using Service = LivingMessiah.Features.FeastDayPlanner;

@using Microsoft.Extensions.Logging

@inject ILogger<Index>? Logger
@inject Service.Data.IService? svc

<PageHeader PageEnum="LivingMessiah.Enums.Nav.LunarMonth" />

@*
<FilterButtons CurrentFilter="CurrentFilter" OnFilterSelected="ReturnedFilter" />
<Header LunarMonthType="CurrentFilter" />
*@

<ProgressBar LunarMonthType="CurrentFilter" VM="VM" />

<FooterVerses />

@code {
	public LunarMonthType? CurrentFilter { get; set; }
	protected LivingMessiah.Features.LunarMonths.ProgressBarVM? VM = new();

	protected override void OnInitialized()
	{
		base.OnInitialized();
		//Logger!.LogDebug("{Method}", nameof(OnInitialized));

		GetDefaultLunarMonthType();
		VM = svc!.GetHeaderServiceModelLunarMonth(CurrentFilter!);
	}

	private void GetDefaultLunarMonthType()
	{
		DateTime dateTimeWithoutTime = DateUtil.GetDateTimeWithoutTime(
			DateTime.Now.AddDays(LivingMessiah.Features.FeastDayPlanner.Constants.Test.AddDays).AddHours(Utc.ArizonaUtcMinus7));

		CurrentFilter = LunarMonthType.List
											.Where(w => w.Date >= dateTimeWithoutTime)
											.OrderBy(o => o.Date)
											.FirstOrDefault();

		if (CurrentFilter is null)
		{
			Logger!.LogDebug("{Method}, CurrentFilter: {CurrentFilter} is null, setting to 1"
			, nameof(GetDefaultLunarMonthType), nameof(CurrentFilter), nameof(LunarMonthType.Nissan));
			CurrentFilter = LunarMonthType.Nissan;
		}

		VM = svc!.GetHeaderServiceModelLunarMonth(CurrentFilter!);
		Logger!.LogDebug("{Method}, CurrentFilter: {CurrentFilter}; dateTimeWithoutTime: {DateOnly}; Date: {DateAndTime}"
		, CurrentFilter.Name, dateTimeWithoutTime.ToString("dd MMM yyyy HH"), CurrentFilter.Date);


	}

	private void ReturnedFilter(LunarMonthType filter)
	{
		Logger!.LogDebug("{Method}, filter: {filter}", nameof(ReturnedFilter), filter);
		CurrentFilter = filter;
	}
}
