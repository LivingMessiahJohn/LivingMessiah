@page "/LunarMonth"

@using LivingMessiah.Features.FeastDayPlanner
@using LivingMessiah.Helpers
@using CalendarEnums = LivingMessiah.Features.Calendar.Enums


@using Microsoft.Extensions.Logging
@using Service = LivingMessiah.Features.FeastDayPlanner
@using System.Text.Json
@using LivingMessiah.Features.LunarMonths

@inject IToastService? Toast
@inject ILogger<Index>? Logger

<PageHeader PageEnum="LivingMessiah.Enums.Nav.LunarMonth" />

<ProgressBar LunarMonth="CurrentFilter" VM="VM" />

<CurrentMonthCard LunarMonth="CurrentFilter" />

<div class="d-print-none mb-2">

	<div class="row mt-2">
		<div class="col-12">
			<VersesToggleButton ButtonLabel="Related Verses">
					<VerseReference />
			</VersesToggleButton>
		</div>
	</div>

</div>

<Table />

@inject Service.Data.IService? svc

@code {

	protected override void OnInitialized()
	{
		GetDefaultLunarMonthType();
		VM = svc!.GetHeaderServiceModelLunarMonth(CurrentFilter!);
	}

	private void GetDefaultLunarMonthType()
	{
		DateTime dateTimeWithoutTime = DateUtil.GetDateTimeWithoutTime(
			DateTime.Now.AddDays(Test.AddDays).AddHours(Utc.ArizonaUtcMinus7));

		CurrentFilter = CalendarEnums.LunarMonth.List
											.Where(w => w.Date >= dateTimeWithoutTime)
											.OrderBy(o => o.Date)
											.FirstOrDefault();

		if (CurrentFilter is null)
		{
			Logger!.LogDebug("{Method}, CurrentFilter: {CurrentFilter} is null, setting to 1"
			, nameof(GetDefaultLunarMonthType), nameof(CurrentFilter), nameof(CalendarEnums.LunarMonth.Nissan));
			CurrentFilter = CalendarEnums.LunarMonth.Nissan;
		}

		VM = svc!.GetHeaderServiceModelLunarMonth(CurrentFilter!);
		Logger!.LogDebug("{Method}, CurrentFilter: {CurrentFilter}; dateTimeWithoutTime: {DateOnly}; Date: {DateAndTime}"
		, CurrentFilter.Name, dateTimeWithoutTime.ToString("dd MMM yyyy HH"), CurrentFilter.Date);

	}

	public CalendarEnums.LunarMonth? CurrentFilter { get; set; }
	protected LivingMessiah.Features.LunarMonths.ProgressBarVM? VM = new();
	private string? MoonPhaseInfo;

}