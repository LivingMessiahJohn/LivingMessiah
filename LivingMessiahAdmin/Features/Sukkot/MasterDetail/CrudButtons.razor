@using LivingMessiahAdmin.Features.Sukkot.ManageRegistration.Enums;
@using LivingMessiahAdmin.Features.Sukkot.ManageRegistration.MasterDetail
@using RegStatusEnums = LivingMessiahAdmin.Features.Sukkot.RegistrationSteps.Enums  //Ref. was from LivingMessiah

@if (ParmCrud == Crud.Donation)
{
	<button @onclick="@OnButtonClicked" title="@Title"
				type="button" class="@ParmCrud.ButtonColor btn-sm position-relative">
		<i class="@ParmCrud!.Icon"></i>
		@ParmCrud.Text
		<span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-success">
			@DonationRowCount
			<span class="visually-hidden">Donation Row Count</span>
		</span>
	</button>
}
else
{
	@if (ParmCrud == Crud.DeleteRegistration && DonationRowCount != 0)
	{
		<button title="@Title"
				type="button" disabled class="@ParmCrud.ButtonColor btn-sm">
			<i class="fas fa-hand-paper"></i>
			Cant Delete
		</button>
	}
	else
	{
		<button @onclick="@OnButtonClicked" title="@Title"
				type="button" class="@ParmCrud!.ButtonColor btn-sm">
			<i class="@ParmCrud!.Icon"></i>
			@ParmCrud!.Text
		</button>
	}

}
@code {
	[Parameter, EditorRequired] public Crud? ParmCrud { get; set; }

	[Parameter] public string? EMail { get; set; } // Required for Add
	[Parameter, EditorRequired] public int Id { get; set; } // Use 0 for Add and Repopulate
	[Parameter] public string? FullName { get; set; } // Required for Donation
	[Parameter] public int DonationRowCount { get; set; }

	[Parameter] public EventCallback<CrudAndIdArgs> OnCrudActionSelected { get; set; }

	private async Task OnButtonClicked()  //Crud? crud
	{
		CrudAndIdArgs args = new CrudAndIdArgs
		{
			Crud = ParmCrud!,  // Crud = crud!,
			EMail = EMail ?? "???",
			Id = Id,
			FullName = FullName ?? "???"
		};
		await OnCrudActionSelected.InvokeAsync(args);
	}

	private string Title => Id == 0 ? "" : $"Id: {Id}";
}