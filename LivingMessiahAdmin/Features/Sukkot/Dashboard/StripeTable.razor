@using LivingMessiahAdmin.Features.Sukkot.Dashboard.Data

@inject ILogger<StripeTable>? Logger
@inject IToastService? Toast
@inject IRepository? db

<LoadingComponent IsLoading="StripeQuerys == null" TurnSpinnerOff=TurnSpinnerOff>

<div class="mt-4">
	<TableTemplate Items="StripeQuerys" HeaderCSS="@HeaderCSS">
		<TableHeader>
			<th>Id</th>
			<th>Email</th>
			<th>Registration Id</th>
			<th>Modification Count</th>
			<th>Last Modified</th>
			<th>First Name</th>
			<th>Family Name</th>
		</TableHeader>
		<RowTemplate>
			<td>@context.Id</td>
			<td>@context.Email</td>
			<td>@context.RegistrationId</td>
			<td>@context.ModificationCount</td>
			<td>@context.LastModifiedDate.ToString("g")</td>
			<td>@context.FirstName</td>
			<td>@context.FamilyName</td>
		</RowTemplate>
	</TableTemplate>
</div>
</LoadingComponent>

@code {
	//[Parameter, EditorRequired] public List<StripeQuery>? ParamStripeList { get; set; }
	protected string? HeaderCSS = "table table-primary table-hover";

	bool TurnSpinnerOff = false;
	public List<StripeQuery>? StripeQuerys { get; set; }
	protected override async Task OnInitializedAsync()
	{
		Logger!.LogDebug("{Method}", nameof(OnInitializedAsync));
		try
		{
			StripeQuerys = await db!.GetAllStripe();
		}
		catch (Exception ex)
		{
			Logger!.LogError(ex, "{Method}", nameof(OnInitializedAsync));
			Toast!.ShowError($"{Global.ToastShowError} | {nameof(OnInitializedAsync)}");
		}
		TurnSpinnerOff = true;
	}

}