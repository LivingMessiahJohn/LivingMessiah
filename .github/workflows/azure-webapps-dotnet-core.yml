# This workflow will build and push a .NET Core app to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-dotnetcore?tabs=net60&pivots=development-environment-vscode
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and DOTNET_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Build and deploy ASP.Net Core app to an Azure Web App

env:
  AZURE_WEBAPP_NAME: LivingMessiah    # set this to the name of your Azure Web App
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '9.0.x'              # set this to the .NET Core version to use

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: Publish LivingMessiah
        run: dotnet publish LivingMessiah/LivingMessiah.csproj -c Release -o ${{ github.workspace }}/publish/LivingMessiah

      - name: Publish LivingMessiahAdmin
        run: dotnet publish LivingMessiahAdmin/LivingMessiahAdmin.csproj -c Release -o ${{ github.workspace }}/publish/LivingMessiahAdmin

      - name: Debug - List all files and directories
        run: |
          echo "=== Current directory ==="
          pwd
          echo "=== Contents of root ==="
          ls -la
          echo "=== Looking for publish directory ==="
          find . -name "publish" -type d
          echo "=== Contents of workspace ==="
          ls -la ${{ github.workspace }}
          echo "=== Looking for any LivingMessiah directories ==="
          find . -name "*LivingMessiah*" -type d
          echo "=== All files and directories (recursive) ==="
          find . -type f -name "*.dll" | head -20

      - name: Upload LivingMessiah artifact
        uses: actions/upload-artifact@v4
        with:
          name: LivingMessiah
          path: ${{ github.workspace }}/publish/LivingMessiah

      - name: Upload LivingMessiahAdmin artifact
        uses: actions/upload-artifact@v4
        with:
          name: LivingMessiahAdmin
          path: ${{ github.workspace }}/publish/LivingMessiahAdmin

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'

    steps:
      - name: Download LivingMessiah artifact
        uses: actions/download-artifact@v4
        with:
          name: LivingMessiah
          path: ./deploy-livingmessiah

      - name: Download LivingMessiahAdmin artifact  
        uses: actions/download-artifact@v4
        with:
          name: LivingMessiahAdmin
          path: ./deploy-livingmessiahadmin

      - name: List files for debugging
        run: |
          ls -la
          ls -la ./deploy-livingmessiah
          ls -la ./deploy-livingmessiahadmin

      - name: Deploy LivingMessiah to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'LivingMessiah'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: './deploy-livingmessiah'

      - name: Deploy LivingMessiahAdmin to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'LivingMessiahAdmin'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_ADMIN }}
          package: './deploy-livingmessiahadmin'
